name: Django CI

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test_db
        ports: ["3306:3306"]
        options: --health-cmd="mysqladmin ping --silent" --health-interval=10s --health-timeout=5s --health-retries=3

    env:
      DB_HOST: 127.0.0.1
      DB_PORT: 3306
      DB_NAME: test_db
      DB_USER: root
      DB_PASSWORD: root

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m venv venv
          . venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Wait for MySQL to be ready
        run: |
          until mysqladmin ping -h 127.0.0.1 -u root -proot --silent; do
            echo "Waiting for database connection..."
            sleep 5
          done

      - name: Run migrations
        run: |
          . venv/bin/activate
          python manage.py migrate
        working-directory: messaging_app

      - name: Run tests with coverage
        run: |
          . venv/bin/activate
          pytest --junitxml=test-results.xml --cov=. --cov-report=xml
        working-directory: messaging_app

      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: messaging_app/test-results.xml

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: messaging_app/coverage.xml

      - name: Run flake8 lint check
        run: |
          . venv/bin/activate
          flake8 .
        working-directory: messaging_app
