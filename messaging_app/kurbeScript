#!/usr/bin/env bash
# kurbeScript — spin up a local Kubernetes cluster with Minikube, verify it, and list pods.
# Works on Linux/macOS. Requires curl and (ideally) Docker. Falls back to minikube's bundled kubectl if kubectl isn't installed.

set -euo pipefail

# -------- Helpers --------
log()  { printf "\033[1;34m[INFO]\033[0m %s\n" "$*"; }
warn() { printf "\033[1;33m[WARN]\033[0m %s\n" "$*"; }
err()  { printf "\033[1;31m[ERR]\033[0m  %s\n" "$*" >&2; }

need_cmd() {
  command -v "$1" >/dev/null 2>&1 || {
    err "Required command '$1' not found. Please install it and re-run."; exit 1;
  }
}

have_cmd() { command -v "$1" >/dev/null 2>&1; }

os="$(uname -s)"

# -------- Ensure Minikube --------
ensure_minikube() {
  if have_cmd minikube; then
    log "Minikube found: $(minikube version | head -n1)"
    return
  fi

  log "Minikube not found. Installing…"
  need_cmd curl

  case "$os" in
    Linux)
      curl -fsSL -o /tmp/minikube-linux-amd64 https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
      sudo install /tmp/minikube-linux-amd64 /usr/local/bin/minikube
      ;;
    Darwin)
      if have_cmd brew; then
        brew install minikube
      else
        curl -fsSL -o /tmp/minikube-darwin-universal.tar.gz https://storage.googleapis.com/minikube/releases/latest/minikube-darwin-universal.tar.gz
        tar -xzf /tmp/minikube-darwin-universal.tar.gz -C /tmp
        sudo install /tmp/minikube /usr/local/bin/minikube
      fi
      ;;
    *)
      err "Unsupported OS: $os. Install minikube manually: https://minikube.sigs.k8s.io/docs/start/"
      exit 1
      ;;
  esac

  log "Minikube installed: $(minikube version | head -n1)"
}

# -------- Choose Driver --------
choose_driver() {
  if have_cmd docker; then
    echo "docker"
  elif [ "$os" = "Darwin" ] && have_cmd hyperkit; then
    echo "hyperkit"
  else
    # Let minikube auto-pick; warn the user for visibility
    warn "No explicit container driver detected (e.g., Docker). Minikube will auto-select a driver."
    echo "auto"
  fi
}

# -------- Ensure kubectl (or fallback) --------
kubectl_cmd=""
ensure_kubectl() {
  if have_cmd kubectl; then
    kubectl_cmd="kubectl"
    log "kubectl found: $($kubectl_cmd version --client --short 2>/dev/null || echo 'client version lookup skipped')"
  else
    kubectl_cmd="minikube kubectl --"
    warn "kubectl not found; will use 'minikube kubectl --' instead."
  fi
}

# -------- Start cluster --------
start_cluster() {
  local driver
  driver="$(choose_driver)"

  log "Starting Minikube cluster (this may take a few minutes)…"
  if [ "$driver" = "auto" ]; then
    minikube start
  else
    minikube start --driver="$driver"
  fi

  # Optional: speed up image pulls in dev by enabling registry cache (ignore failures)
  minikube addons enable registry >/dev/null 2>&1 || true

  log "Cluster status:"
  minikube status || true
}

# -------- Verify cluster & list pods --------
verify_and_list() {
  log "Verifying cluster with 'kubectl cluster-info'…"
  # shellcheck disable=SC2086
  $kubectl_cmd cluster-info

  log "Listing pods across all namespaces…"
  # shellcheck disable=SC2086
  $kubectl_cmd get pods -A
}

# -------- Main --------
main() {
  ensure_minikube
  ensure_kubectl
  start_cluster
  verify_and_list

  log "All done. Your local Kubernetes cluster is up, healthy (per cluster-info), and pods are listed."
}

main "$@"
